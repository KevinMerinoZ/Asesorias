-- MySQL Script generated by MySQL Workbench
-- Fri Nov 22 17:15:54 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema dbasesorias
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema dbasesorias
-- -----------------------------------------------------
DROP DATABASE IF EXISTS `dbasesorias`;
CREATE DATABASE `dbasesorias` ;
USE `dbasesorias`;

-- -----------------------------------------------------
-- Table `dbasesorias`.`Directivo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbasesorias`.`Directivo` (
  `matricula` VARCHAR(11) NOT NULL COMMENT 'Este atributo almacena la matricula del usuario',
  `contrasenia` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena la contrasenia del usuario',
  `nombre` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el nombre o los nombres del usuario',
  `apellidoP` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el apellido paterno del usuario',
  `apellidoM` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el apellido materlo del usuario',
  `genero` VARCHAR(15) NOT NULL COMMENT 'Este atributo almacena el genero del usuario',
  `departamento` VARCHAR(150) NOT NULL COMMENT 'Este atributo almacena el departamento del que está a cargo el directivo',
  `noProfesores` INT NOT NULL COMMENT 'Este atributo almacena la cantidad de profesores que el directivo tiene a cargo\\\\\\\\n',
  `existencia` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`matricula`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbasesorias`.`Asignatura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbasesorias`.`Asignatura` (
  `idAsignatura` INT NOT NULL AUTO_INCREMENT COMMENT 'Este atributo almacena el identificador de la asignatura',
  `nombre` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el nombre de la asignatura.',
  `siglas` VARCHAR(5) NOT NULL COMMENT 'Este atributo almacena las siglas de abreviación de la asignatura',
  `descripcion` TEXT NOT NULL COMMENT 'Este atributo almacena la descripcion de la asignatura.',
  `existencia` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idAsignatura`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbasesorias`.`Alumno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbasesorias`.`Alumno` (
  `matricula` VARCHAR(11) NOT NULL COMMENT 'Este atributo almacena la matricula del usuario',
  `contrasenia` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena la contrasenia del usuario',
  `nombre` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el nombre o los nombres del usuario',
  `apellidoP` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el apellido paterno del usuario',
  `apellidoM` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el apellido materlo del usuario',
  `genero` VARCHAR(15) NOT NULL COMMENT 'Este atributo almacena el genero del usuario',
  `carrera` VARCHAR(6) NOT NULL COMMENT 'Este atributo almacena la carrera que cursa el alumno.',
  `grado` INT NOT NULL COMMENT 'Este atributo almacena el grado en el que se encuentra el alumno.',
  `grupo` CHAR NOT NULL COMMENT 'Este atributo almacena el grupo en el que se encuentra el alumno.',
  `existencia` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`matricula`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbasesorias`.`Disponibilidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbasesorias`.`Disponibilidad` (
  `idDisponibilidad` INT NOT NULL AUTO_INCREMENT,
  `periodo` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el periodo en el que se encuentra la disponibilidad.',
  `Lunes` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el rango de horas en las que estara disponible el profesor el dia lunes.',
  `martes` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el rango de horas en las que estara disponible el profesor el dia martes.',
  `miercoles` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el rango de horas en las que estara disponible el profesor el dia miercoles.',
  `jueves` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el rango de horas en las que estara disponible el profesor el dia jueves.',
  `viernes` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el rango de horas en las que estara disponible el profesor el dia viernes.',
  `existencia` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idDisponibilidad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbasesorias`.`Profesor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbasesorias`.`Profesor` (
  `matricula` VARCHAR(11) NOT NULL COMMENT 'Este atributo almacena la matricula del usuario',
  `contrasenia` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena la contrasenia del usuario',
  `nombre` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el nombre o los nombres del usuario',
  `apellidoP` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el apellido paterno del usuario',
  `apellidoM` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el apellido materlo del usuario',
  `genero` VARCHAR(15) NOT NULL COMMENT 'Este atributo almacena el genero del usuario',
  `nivelEducativo` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el nivel educativo del profesor',
  `especialidad` VARCHAR(85) NOT NULL COMMENT 'Este atributo almacena en que se especializa el profesor',
  `estudiantesAtendidos` INT NOT NULL COMMENT 'Este atributo almacena la cantidad de alumnos que ha atendido en asesorias',
  `existencia` TINYINT NOT NULL DEFAULT 1,
  `Disponibilidad_idDisponibilidad` INT NULL,
  `Directivo_matricula` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`matricula`),
  CONSTRAINT `fk_Profesor_Directivo1`
    FOREIGN KEY (`Directivo_matricula`)
    REFERENCES `dbasesorias`.`Directivo` (`matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Profesor_Disponibilidad1`
    FOREIGN KEY (`Disponibilidad_idDisponibilidad`)
    REFERENCES `dbasesorias`.`Disponibilidad` (`idDisponibilidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbasesorias`.`ProfesorAsignatura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbasesorias`.`ProfesorAsignatura` (
  `Profesor_matricula` VARCHAR(11) NOT NULL,
  `Asignatura_idAsignatura` INT NOT NULL,
  `existencia` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`Profesor_matricula`, `Asignatura_idAsignatura`),
  CONSTRAINT `fk_Profesor_has_Asignatura_Profesor1`
    FOREIGN KEY (`Profesor_matricula`)
    REFERENCES `dbasesorias`.`Profesor` (`matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Profesor_has_Asignatura_Asignatura1`
    FOREIGN KEY (`Asignatura_idAsignatura`)
    REFERENCES `dbasesorias`.`Asignatura` (`idAsignatura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbasesorias`.`Nota`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbasesorias`.`Nota` (
  `idNota` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(100) NOT NULL COMMENT 'Este atributo almacena el titulo de la nota',
  `cuerpo` TEXT NOT NULL COMMENT 'Este atributo almacena el cuerpo de la nota.',
  `fechaCreacion` DATE NOT NULL COMMENT 'Este atributo almacena la fecha en la que fue creada la nota.',
  `horaInicio` TIME NOT NULL,
  `horaFin` TIME NULL DEFAULT NULL,
  `calificacionP1` DOUBLE NOT NULL,
  `calificacionP2` DOUBLE NULL DEFAULT NULL,
  `existencia` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idNota`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbasesorias`.`Cita`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbasesorias`.`Cita` (
  `idCita` INT NOT NULL AUTO_INCREMENT,
  `tema` VARCHAR(100) NOT NULL COMMENT 'Este atributo almacena el tema del que el alumno quiere tratar en la asesoria.',
  `detalles` TEXT NOT NULL COMMENT 'Este atributo almacena algunos detalles que el alumno quiera comentarle al profesor.',
  `fechaEnvio` DATE NOT NULL COMMENT 'Este atributo almacena la fecha en la que se envia la cita al profesor.',
  `fechaEstado` DATE NULL DEFAULT NULL COMMENT 'Este atributo almacena la fecha en la que la cita es aceptada o rechazada por el profesor.',
  `estado` VARCHAR(10) NOT NULL COMMENT 'Este atributo almacena si la cita esta Pendiente, Aceptada o Rechazada.',
  `existencia` TINYINT NOT NULL DEFAULT 1,
  `ProfesorAsignatura_Profesor_matricula` VARCHAR(11) NOT NULL COMMENT 'Este atributo almacena el identificador del profesor al que va diriga la cita.',
  `ProfesorAsignatura_Asignatura_idAsignatura` INT NOT NULL COMMENT 'Este atributo almacena la asignatura que el profesor va a atender en la cita.',
  `Nota_idNota` INT NULL,
  `Alumno_matricula` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`idCita`),
  CONSTRAINT `fk_Cita_ProfesorAsignatura1`
    FOREIGN KEY (`ProfesorAsignatura_Profesor_matricula` , `ProfesorAsignatura_Asignatura_idAsignatura`)
    REFERENCES `dbasesorias`.`ProfesorAsignatura` (`Profesor_matricula` , `Asignatura_idAsignatura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cita_Alumno1`
    FOREIGN KEY (`Alumno_matricula`)
    REFERENCES `dbasesorias`.`Alumno` (`matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cita_Nota1`
    FOREIGN KEY (`Nota_idNota`)
    REFERENCES `dbasesorias`.`Nota` (`idNota`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbasesorias`.`TipoMaterial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbasesorias`.`TipoMaterial` (
  `idmaterial` INT NOT NULL AUTO_INCREMENT,
  `extension` VARCHAR(5) NOT NULL COMMENT 'Este atributo almacena la extension del tipo de material.',
  `descripcion` TEXT NOT NULL COMMENT 'Este atributo almacena la descripcion del tipo de material',
  `categoria` VARCHAR(80) NOT NULL COMMENT 'Este atributo almacena el nombre del tipo de material',
  `existencia` TINYINT NOT NULL DEFAULT 1,
  `Profesor_matricula` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`idmaterial`),
  CONSTRAINT `fk_TipoMaterial_Profesor1`
    FOREIGN KEY (`Profesor_matricula`)
    REFERENCES `dbasesorias`.`Profesor` (`matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbasesorias`.`materialCompartido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbasesorias`.`materialCompartido` (
  `idmaterialCompartido` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(100) NOT NULL COMMENT 'Este atributo almacena el titulo del material compartido.',
  `archivo` VARCHAR(150) NOT NULL COMMENT 'Este atributo almacena la url del archivo en el sistema web.',
  `comentario` TEXT NOT NULL COMMENT 'Este atributo almacena la descripcion del material compartido',
  `existencia` TINYINT NOT NULL DEFAULT 1,
  `TipoMaterial_idmaterial` INT NOT NULL COMMENT 'Este atributo almacena el identificador del tipo de material al que corresponde el material compartido.',
  `Cita_idCita` INT NOT NULL,
  PRIMARY KEY (`idmaterialCompartido`),
  CONSTRAINT `fk_materialCompartido_TipoMaterial1`
    FOREIGN KEY (`TipoMaterial_idmaterial`)
    REFERENCES `dbasesorias`.`TipoMaterial` (`idmaterial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_materialCompartido_Cita1`
    FOREIGN KEY (`Cita_idCita`)
    REFERENCES `dbasesorias`.`Cita` (`idCita`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbasesorias`.`Formato`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbasesorias`.`Formato` (
  `idFormato` INT NOT NULL AUTO_INCREMENT,
  `archivo` VARCHAR(150) NOT NULL COMMENT 'Este atributo almacena el url de donde se encuentra el archivo del formato.',
  `fechaModificacion` DATE NOT NULL COMMENT 'Este atributo almacena la fecha en la que se le realizo una modificación.',
  `fechaCreacion` DATE NOT NULL COMMENT 'Este atributo almacena la fecha en la que se creo el archivo del formato.',
  `Profesor_matricula` VARCHAR(11) NOT NULL COMMENT 'Este atributo almacena el identificador del profesor que realizo alguna accion para el formato.',
  `existencia` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idFormato`),
  CONSTRAINT `fk_Formato_Profesor1`
    FOREIGN KEY (`Profesor_matricula`)
    REFERENCES `dbasesorias`.`Profesor` (`matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


INSERT INTO alumno VALUES
("mcko221851", "MCKO221851", "Kevin Joel", "Merino", "Castillo", "Masculino", "ITI", 7, 'D', 1),
("ggco123456", "GGCO221851", "Carlos", "Guerrero", "Garcia", "Masculino", "ITI", 4, 'C', 1), 
("ajjo654321", "AJJO654321", "Juana", "Arzate", "Buena Vista", "Femenino", "ITI", 7, 'B', 1),
("rpdo987654", "RPDO987654", "Rosa", "Perez", "Dominguez", "Femenino", "ITI", 6, 'A', 1),
("ldlo345678", "LDLO345678", "Luis", "Diaz", "Lopez", "Masculino", "ITI", 8, 'E', 1);

INSERT INTO Directivo VALUES("gblo654321", "GBLO654321", "Luis Miguel", "Gallego", "Basteri", "Masculino", "Departamento de ITI", 1, 1);

INSERT INTO disponibilidad VALUES (1, 'Otono', '10:00-14:00', '13:00-18:00', '12:00-20:00', '15:00-17:00', '10:00-14:00', 1);

INSERT INTO profesor VALUES
("pcfo123456", "pcfo123456", "Frida Lourdes", "Perez", "Colin", "Femenino", "Doctorado", "Desarrollo de software", 0, 1, 1, "gblo654321");

INSERT INTO profesor VALUES("mcjo123456", "mcjo123456", "Jose", "Martinez", "Calderon", "Masculino", "Doctorado", "Matematicas avanzadas", 0, 1, 1, "gblo654321");
INSERT INTO profesor VALUES("aglo234567", "aglo234567", "Ana", "Gonzalez", "Lopez", "Femenino", "Maestria", "Fisica aplicada", 0, 1, 1, "gblo654321");
INSERT INTO profesor VALUES("frma345678", "frma345678", "Francisco", "Martinez", "Alvarado", "Masculino", "Doctorado", "Ingenieria de software", 0, 1, 1, "gblo654321");
INSERT INTO profesor VALUES("mapi456789", "mapi456789", "Maria", "Perez", "Ibarra", "Femenino", "Licenciatura", "Quimica analitica", 0, 1, 1, "gblo654321");
INSERT INTO profesor VALUES("juva567890", "juva567890", "Juan", "Valdez", "Arriaga", "Masculino", "Maestria", "Ciencias computacionales", 0, 1, 1, "gblo654321");
INSERT INTO profesor VALUES("clro678901", "clro678901", "Claudia", "Rodriguez", "Orozco", "Femenino", "Doctorado", "Biologia molecular", 0, 1, 1, "gblo654321");

INSERT INTO asignatura VALUES
(0, 'Ingles', 'ING', 'Asignatura de ingles', 1),
(0, 'Programacion', 'PRG', 'Asignatura de Programacion', 1),
(0, 'Matematicas', 'MTA', 'Asignatura de Matematicas', 1),
(0, 'Fisica', 'FIS', 'Asignatura de Fisica', 1),
(0, 'Quimica', 'QUI', 'Asignatura de Quimica', 1),
(0, 'Historia', 'HIS', 'Asignatura de Historia', 1),
(0, 'Biologia', 'BIO', 'Asignatura de Biologia', 1),
(0, 'Literatura', 'LIT', 'Asignatura de Literatura', 1),
(0, 'Geografia', 'GEO', 'Asignatura de Geografia', 1),
(0, 'Etica', 'ETI', 'Asignatura de Etica', 1),
(0, 'Educacion Fisica', 'EDF', 'Asignatura de Educacion Fisica', 1);

INSERT INTO profesorasignatura VALUES('pcfo123456', 2, 1);
INSERT INTO profesorasignatura VALUES
('juva567890', 2, 1), 
('juva567890', 3, 1),
('mcjo123456', 3, 1),
('frma345678', 4, 1),
('aglo234567', 5, 1),
('mapi456789', 6, 1),
('clro678901', 7, 1),
('juva567890', 8, 1),
('mcjo123456', 9, 1),
('aglo234567', 10, 1);

INSERT INTO tipomaterial VALUES(0, '.pdf', 'documentos pdf', 'diccionario', 1, "pcfo123456");
INSERT INTO tipomaterial VALUES(0, '.docx', 'documentos word', 'diccionario', 1, "pcfo123456");
INSERT INTO tipomaterial VALUES(0, '.docx', 'reportes word', 'reporte', 1, "pcfo123456");

INSERT INTO cita VALUES
(0, "Algebra", "ver el tema de algebra", "2024-09-24", "2024-09-25", "Aceptada", 1, "juva567890", 2, NULL, "mcko221851"),
(0, "Programacion basica", "Resolver ejercicios de logica y sintaxis", "2024-08-15", "2024-09-16", "Aceptada", 1, "mcjo123456", 3, NULL, "ggco123456"),
(0, "Historia", "Estudiar el periodo de la Revolucion", "2024-09-20", "2024-09-22", "Aceptada", 1, "frma345678", 4, NULL, "ajjo654321"),
(0, "Quimica organica", "Entender estructuras de compuestos", "2024-10-01", "2024-10-02", "Aceptada", 1, "aglo234567", 5, NULL, "rpdo987654"),
(0, "Fisica", "Resolver problemas de cinematica", "2024-10-05", "2024-10-06", "Pendiente", 1, "mapi456789", 6, NULL, "ldlo345678"),
(0, "Biologia", "Estudiar genetica basica", "2024-06-10", "2024-06-11", "Aceptada", 1, "clro678901", 7, NULL, "mcko221851"),
(0, "Educacion Fisica", "Planificar una rutina de ejercicio", "2024-10-12", "2024-10-13", "Pendiente", 1, "juva567890", 8, NULL, "ggco123456"),
(0, "Literatura", "Analizar un poema contemporaneo", "2024-04-15", "2024-04-16", "Aceptada", 1, "mcjo123456", 9, NULL, "ajjo654321"),
(0, "Geografia", "Comprender la tectonica de placas", "2024-03-20", "2024-03-21", "Aceptada", 1, "aglo234567", 10, NULL, "rpdo987654"),
(0, "Matematicas", "Resolver problemas de algebra lineal", "2024-01-25", "2024-01-26", "Rechazada", 1, "frma345678", 4, NULL, "ldlo345678"),
(0, "Biologia", "Algebra basica", "2024-06-20", "2024-06-21", "Aceptada", 1, "clro678901", 7, NULL, "ldlo345678"),
(0, "Biologia", "Biologia basica", "2024-07-20", "2024-07-21", "Aceptada", 1, "clro678901", 7, NULL, "rpdo987654");

